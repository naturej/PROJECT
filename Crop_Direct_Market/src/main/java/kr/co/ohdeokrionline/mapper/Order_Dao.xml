<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
    PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace=
	"kr.co.ohdeokrionline.model.dao.Order_Dao">
	
	<select id="sellermanage" resultType="kr.co.ohdeokrionline.model.vo.Order_DTO">
		select o.or_id, s.bo_subject, s.pro_name, o.or_quan, o.or_cost, o.buy_userid, o.or_state, o.or_addr, s.bo_num,s.bo_salnum from orderlist o join salboard s on o.bo_num=s.bo_num where SELL_USERID=#{user_id}
		order by o.OR_DATE desc
	</select>
	<update id="orderstatechange">
		update orderlist set or_state='배송중' where or_id=#{param1} and bo_num=#{param2}
	</update>
	
	<update id="orderstatechange2">
		update orderlist set or_state='배송완료', dv_end = sysdate where or_id=#{param1} and bo_num=#{param2}
	</update>
	
	<update id="orderstatechange3">
		update orderlist set or_state='거래종료' where or_id=#{param1} and bo_num=#{param2}
	</update>
	
	<!-- 주문 입력 -->
  	<insert id="insert" parameterType="kr.co.ohdeokrionline.model.vo.Board_DTO">
	      INSERT INTO ORDERLIST(OR_ID,BO_NUM,OR_QUAN,OR_DATE,BUY_USERID,OR_COST,SELL_USERID,OR_STATE,OR_HOW,ADD_CODE,OR_ADDD,OR_ADDR)
	      VALUES(#{or_id},#{bo_num},#{or_quan},SYSDATE,#{buy_userid},#{or_cost},#{sell_userid},'입금대기',#{or_how},#{add_code},#{or_addd},#{or_addr})   
	     </insert>
	     
<!-- 주문 번호 생성 -->	    
	<select id="orid" resultType="STRING">
	 SELECT to_date(SYSDATE,'YYYY-MM-DD')||'-'|| ROUND(DBMS_RANDOM.VALUE(100000, 999999),0) as OR_ID FROM DUAL
	</select>


<!-- 주문생성 후 장바구니 삭제 -->
	<delete id="delshopbag" parameterType="kr.co.ohdeokrionline.model.vo.ShoppingBasket_DTO">
	DELETE SHOPBAG WHERE USER_ID=#{user_id} AND BO_NUM=#{bo_num} AND SH_QUANTITY=#{sh_quantity}
	</delete>

<!-- 주문생성, 장바구니 삭제후 다시 장바구니 LIST 비동기 출력 -->
		<select id="shopbaglist" parameterType="STRING" resultType="kr.co.ohdeokrionline.model.vo.ShoppingBasket_DTO">
		SELECT S.BO_NUM AS BO_NUM,
			   S.BO_SUBJECT AS BO_SUBJECT,
			   S.BO_PHOTO AS BO_PHOTO,
			   S.BO_PRICE AS BO_PRICE,
			   S.USER_ID AS SELL_ID,
			   SH.USER_ID AS USER_ID, 
			   SH.SH_QUANTITY AS SH_QUANTITY, 
			   SH.SH_PRICE AS SH_PRICE
		FROM SALBOARD S 
		JOIN SHOPBAG SH
		ON S.BO_NUM = SH.BO_NUM
		WHERE s.USER_ID = #{user_id}
		</select>
	
<!-- 주문list 출력 -->
   <select id="orderlist" resultType="kr.co.ohdeokrionline.model.vo.Order_DTO">
        SELECT O.OR_ID , 
          TO_CHAR(O.OR_DATE,'YYYY-MM-DD') AS OR_DATE ,
          S.BO_SUBJECT,
          S.PRO_NAME ,
          O.OR_COST ,
          O.OR_QUAN ,
          O.SELL_USERID,
          O.OR_STATE ,
          O.OR_HOW , S.BO_NUM
          FROM ORDERLIST O JOIN SALBOARD S on O.BO_NUM=S.BO_NUM where O.BUY_USERID=#{buy_userid}
          ORDER BY O.OR_DATE DESC
   </select>
   
   <!-- 주문ID list 출력 -->
   <select id="ordercodelist" resultType="kr.co.ohdeokrionline.model.vo.Order_DTO">
        SELECT OR_ID,count(OR_ID)as count
       from orderlist 
       where BUY_USERID=#{buy_userid}
       GROUP BY OR_ID
       ORDER BY OR_ID DESC    
   </select>
	
	<!-- 실구매자 확인 -->
	<select id="buyUser" parameterType="String" resultType="String">
		SELECT DISTINCT BUY_USERID 
	  	FROM ORDERLIST
	  	WHERE BO_NUM=#{bo_num} AND OR_STATE='거래종료'
  	</select> 
  	
  	<!-- 판매자 계좌 확인 -->
  	<select id="seller_account" resultType="kr.co.ohdeokrionline.model.vo.Account_DTO">
		SELECT *
	  	FROM account
	  	WHERE user_id=#{sell_userid}
  	</select>

	<!-- 소비자가 입금 했을 때 -->
	<update id="moneychecking" >
		update orderlist set or_state='입금확인 중' where or_id=#{param1}
		and bo_num=#{param2}
	</update>
	
	<!-- 입금확인했을때 온라인 판매금액 손익계산서에 insert 손익계산서가  없을 때 -->
	<insert id="crebal">
		INSERT INTO BALANCE(USER_ID,BAL_DATE,SAL_ON) VALUES(#{param1},#{param2},#{param3})
	</insert>
	
	<!-- 입금확인했을때 온라인 판매금액 손익계산서에 insert 손익계산서가 있을 떄 -->
	<update id="upbal">
	 UPDATE BALANCE SET SAL_ON=SAL_ON+#{param3} WHERE USER_ID=#{param1} AND BAL_DATE=#{param2}
	</update>
	
	<!-- Header에 판매자가 로그인 시 자신의 새로운 판매 건수  -->
	<select id="newordercount" resultType="Int">
	select count(*) as count 
	from orderlist 
	where SELL_USERID=#{user_id} AND OR_STATE='입금확인 중'
	</select>
	
</mapper>